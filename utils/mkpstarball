#!/usr/bin/env bash
set -e # Abort on errors

usage() {
  cat <<EOF
Usage: $(basename $0) [options]

  Create a release tarball and zip archive of Pyskool.

Options:
  -h  Show this help
  -p  Use setup-pkg.py (for building a DEB or RPM package)
  -q  Be quiet
  -t  Write only the release tarball
EOF
  exit 1
}

info() {
  if [ $VERBOSE -eq 1 ]; then
    echo $*
  fi
}

if [ -z "$PYSKOOL_HOME" ]; then
  echo "Error: PYSKOOL_HOME not defined."
  exit 1
fi
if [ ! -d "$PYSKOOL_HOME" ]; then
  echo "Error: directory not found: $PYSKOOL_HOME"
  exit 1
fi

cd $PYSKOOL_HOME
VERSION=$(./pyskool.py --version | cut -f1 -d' ')
PKGNAME=pyskool-$VERSION
PKGDIR=$PKGNAME

VERBOSE=1
WRITE_ZIP=1
SETUP=setup.py

while getopts ":hpqt" opt; do
  case $opt in
    h) usage ;;
    p) SETUP=setup-pkg.py; PKGNAME=pyskool-pkg-$VERSION ;;
    q) VERBOSE=0 ;;
    t) WRITE_ZIP=0 ;;
  esac
done

UTILS=$PYSKOOL_HOME/utils
DISTDIR=${PYSKOOL_HOME}/dist
mkdir -p $DISTDIR
ABSDIR=${DISTDIR}/$PKGDIR
rm -rf ${ABSDIR}
DOCSDIR=${ABSDIR}/docs
mkdir -p $DOCSDIR
DOCSRC=${ABSDIR}/docs-src
mkdir -p ${DOCSRC}/build

$UTILS/get-images.py . > /dev/null
rsync -aR COPYING MANIFEST.in icon.png images.ini pyskool.ini images sounds \
  pyskool/*.py man/{pyskool.py.rst,create-manpages} $ABSDIR
for p in skool_daze{,_take_too} back_to_skool{,_daze} ezad_looks; do
  cp -p pyskool.py $ABSDIR/${p}.py
done
cp -a $SETUP $ABSDIR/setup.py

cat > $ABSDIR/images/originalx1/images.txt <<EOF
The images in these subdirectories were generated from memory snapshots of the
original Skool Daze and Back to Skool games. The copyright in the original games
is held by Microsphere Computer Services Ltd.
EOF

# Ini files
$UTILS/create-ini.py -q $ABSDIR

# Documentation
cd $PYSKOOL_HOME/sphinx
rm -rf build/*
if ! make html &> /dev/null; then
  echo "*** Error building documentation; aborting"
  exit 1
fi
rsync -a --exclude=.buildinfo --exclude=objects.inv build/html/ $DOCSDIR
rsync -a Makefile make.bat source $DOCSRC

# Man pages
cd $ABSDIR/man
./create-manpages
rm create-manpages pyskool.py.rst

cd $DISTDIR

info Creating ${DISTDIR}/${PKGNAME}.tar.xz
tar acf ${PKGNAME}.tar.xz $PKGDIR

if [ $WRITE_ZIP -eq 1 ]; then
  info Creating ${DISTDIR}/${PKGNAME}.zip
  zip -9qr ${PKGNAME}.zip $PKGDIR
fi
